@import "bootstrap/mixins";
@import "./sass-color-contrast-functions/functions";

@mixin sans-caps() {
  font-family: $caps-font-family;
  line-height: $caps-line-height;
  font-weight: $caps-font-weight;
  letter-spacing: $caps-letter-spacing;
  word-spacing: $caps-word-spacing;
  text-transform: $caps-text-transform;
}

@mixin accessible-alert-variant($background, $border, $color) {
  color: find-accessible-color($color, $background);
  @include gradient-bg($background);
  border-color: find-accessible-color($border, $body-bg, 3);

  hr {
    border-top-color: find-accessible-color($border, $background, 3);
  }

  .alert-link, a {
    color: darken($color, 10%);
  }
}

@mixin yale-style-bootstrap-button($button-color) {
  $button-bg-color: find-accessible-color($button-color, $body-bg, 3);
  $text-color: choose-contrast-color($button-bg-color);
  $border-color: $button-bg-color;

  color: $text-color;
  background-color: $button-bg-color;
  border-color: $border-color;

  @include hover-focus {
    color: find-accessible-color($border-color, $white, 4.5);
    background-color: $white;
  }

  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix($text-color, $button-color, 15%), .5);
    } @else {
      box-shadow: 0 0 0 $btn-focus-width rgba(mix($text-color, $button-color, 15%), .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: $text-color;
    background-color: $button-bg-color;
    border-color: $border-color;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }
}

@mixin yale-style-bootstrap-button-outline($button-color) {
  $border-color: find-accessible-color($button-color, $body-bg, 3);
  $text-color: find-accessible-color($button-color, $body-bg, 4.5);

  color: $text-color;
  border-color: $border-color;

  @include hover-focus {
    color: choose-contrast-color($border-color);
    background-color: $border-color;
  }

  &:focus,
  &.focus {
    outline: 2px solid;
  }

  &.disabled,
  &:disabled {
    color: $text-color;
    background-color: transparent;
  }
}

@mixin accessible-bg-variant($parent, $color) {
  #{$parent} {
    background-color: $color !important;
    color: choose-contrast-color($color);

    a,
    h1, h2, h3, h4, h5, h6,
    .h1, .h2, .h3, .h4, .h5, .h6 {
      color: inherit;
    }
  }
}

@mixin accessible-text-emphasis-variant($parent, $color, $background: $body-bg) {
  #{$parent} {
    color: find-accessible-color($color, $background, 4.5) !important;

    a,
    h1, h2, h3, h4, h5, h6,
    .h1, .h2, .h3, .h4, .h5, .h6 {
      color: inherit;
    }
  }
}

@mixin yale-badge($badge-color, $badge-bg) {
  $accessible-badge-bg: find-accessible-color($badge-bg, $body-bg, 3);
  $accessible-badge-color: find-accessible-color($badge-color, $accessible-badge-bg, 4.5);
  background: $accessible-badge-bg;
  color: $accessible-badge-color;

  @at-root a#{&} {
    @include hover-focus {
      color: $accessible-badge-color;
      background-color: darken($accessible-badge-bg, 10%);
    }

    &:focus,
    &.focus {
      outline: 0;
      box-shadow: 0 0 0 $badge-focus-width rgba($accessible-badge-bg, .5);
    }
  }
}